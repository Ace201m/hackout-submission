{"remainingRequest":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/babel-loader/lib/index.js!/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/khush/Desktop/hackout-submission/src/front_end/eatout/src/components/messageDisplay.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/src/components/messageDisplay.vue","mtime":1581729497759},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNZXNzYWdlJywKICBwcm9wczogWydtZXNzYWdlJywgJ2tleSddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4ge307CiAgfSwKICBtZXRob2RzOiB7fSwKICBjb21wdXRlZDogewogICAgZnJvbUJvdDogZnVuY3Rpb24gZnJvbUJvdCgpIHsKICAgICAgcmV0dXJuIHRoaXMubWVzc2FnZS5mcm9tQm90OwogICAgfQogIH0KfTs="},{"version":3,"sources":["messageDisplay.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAsBA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,KAAA,EAAA,CACA,SADA,EACA,KADA,CAFA;AAKA,EAAA,IALA,kBAKA;AACA,WAAA,EAAA;AAGA,GATA;AAUA,EAAA,OAAA,EAAA,EAVA;AAaA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,OAAA,CAAA,OAAA;AACA;AAHA;AAbA,CAAA","sourcesContent":["<template>\n  <div>\n  <div @click=\"fromBot=!fromBot\" v-bind:class=\"{ message_body: true, l: fromBot, r: !fromBot }\" >\n  \n    <div v-if='typeof(message.messageText)==typeof([1,2])'>\n      <div v-for=\"(res, index) in message.messageText\" :key=\"res\"> \n        <p>{{ 1+index }}. {{ res[0] }}</p>\n         <img style=\"max-height:100px;\" :src='res[1]'>\n\n        \n      </div>\n    </div>\n    <div v-else>\n      {{ message.messageText }}\n    </div>\n    \n    \n  </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Message',\n  props: [\n    'message', 'key'\n  ],\n  data () {\n    return {\n\n    }\n  },\n  methods: {\n    \n  },\n  computed: {\n    fromBot () {\n      return this.message.fromBot;\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.message_body {\n  background-color: rgb(235, 235, 235);\n  margin: 22px;\n  border-radius: 25px;\n  padding: 15px;\n}\n\n.l {\n  text-align: left;\n  margin-right: 100px;\n}\n\n.r {\ntext-align: right;\nmargin-left: 100px;\n}\n</style>\n"],"sourceRoot":"src/components"}]}