{"remainingRequest":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/babel-loader/lib/index.js!/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/khush/Desktop/hackout-submission/src/front_end/eatout/src/components/body.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/src/components/body.vue","mtime":1581724180837},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/khush/Desktop/hackout-submission/src/front_end/eatout/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBtZXNzYWdlRGlzcGxheSBmcm9tICcuL21lc3NhZ2VEaXNwbGF5LnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnQm9keScsCiAgY29tcG9uZW50czogewogICAgJ21lc3NhZ2VEaXNwbGF5JzogbWVzc2FnZURpc3BsYXkKICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlczogW10sCiAgICAgIHE6IFtdLAogICAgICBpc1ZlZzogJycsCiAgICAgIGNhdGVnb3JpZXM6IFsnU3RhcnQhJ10sCiAgICAgIGluaXRpYWw6IHRydWUsCiAgICAgIHF1ZXN0aW9uOiAiQ2FuJ3QgdGhpbmsgd2hhdCB0byBlYXQsIEkgY2FuIGhlbHA/IgogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGdldFNvbWV0aGluZzogZnVuY3Rpb24gZ2V0U29tZXRoaW5nKGluZGV4KSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBjb25zb2xlLmxvZyhpbmRleCk7CiAgICAgIHRoaXMuJGh0dHAuZ2V0KCdodHRwczovL3JlcXJlcy5pbi9hcGkvcHJvZHVjdHMvMycpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICBfdGhpcy5tZXNzYWdlcy5wdXNoKGRhdGEpOwoKICAgICAgICBjb25zb2xlLmxvZygiVGhpcyBydW5zIik7CiAgICAgIH0pOwogICAgICB0aGlzLnF1ZXN0aW9uID0gIiI7CiAgICB9LAogICAgaW5pdGlhbGl6ZTogZnVuY3Rpb24gaW5pdGlhbGl6ZSgpIHsKICAgICAgdGhpcy5xdWVzdGlvbiA9ICJXaGF0IHdvdWxkIHlvdSBwcmVmZXI/IjsKICAgICAgdGhpcy5jYXRlZ29yaWVzID0gWydWZWcnLCAnQm90aCcsICdOb24gdmVnJ107CiAgICAgIHRoaXMuaW5pdGlhbCA9IGZhbHNlOwogICAgfSwKICAgIHNldElzVmVnOiBmdW5jdGlvbiBzZXRJc1ZlZyhpbnApIHsKICAgICAgdGhpcy5pc1ZlZyA9IGlucDsKICAgICAgdGhpcy5pc1ZlZyA9IHRoaXMuaXNWZWcucmVwbGFjZSgvXHMvZywgJycpLnRvTG93ZXJDYXNlKCk7CiAgICAgIHZhciBuZXdNZXNzYWdlID0gewogICAgICAgIGZyb21Cb3Q6IGZhbHNlLAogICAgICAgIG1lc3NhZ2VUZXh0OiAiWW91IHNlbGVjdGVkICIgKyBpbnAKICAgICAgfTsKICAgICAgdGhpcy5tZXNzYWdlcy5wdXNoKG5ld01lc3NhZ2UpOyAvLyBzZW5kIHJlcXVlc3QKCiAgICAgIHRoaXMuJGh0dHAuZ2V0KCdodHRwOi8vbG9jYWxob3N0OjUwMDAvcmVjb21tZW5kZXInICsgIj9pc3ZlZz0iICsgdGhpcy5pc1ZlZyArICcmcXVlcnk9JykudGhlbihmdW5jdGlvbiAoKSB7CiAgICAgICAgY29uc29sZS5sb2coImFzZCIpOwogICAgICB9KTsKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBnZXRNZXNzYWdlczogZnVuY3Rpb24gZ2V0TWVzc2FnZXMoKSB7CiAgICAgIHJldHVybiB0aGlzLm1lc3NhZ2VzOwogICAgfQogIH0KfTs="},{"version":3,"sources":["body.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAA,cAAA,MAAA,sBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,MADA;AAEA,EAAA,UAAA,EAAA;AACA,sBAAA;AADA,GAFA;AAKA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,CAAA,EAAA,EAFA;AAGA,MAAA,KAAA,EAAA,EAHA;AAIA,MAAA,UAAA,EAAA,CAAA,QAAA,CAJA;AAKA,MAAA,OAAA,EAAA,IALA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAQA,GAdA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,YADA,wBACA,KADA,EACA;AAAA;;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,WAAA,KAAA,CAAA,GAAA,CAAA,kCAAA,EAAA,IAAA,CACA,UAAA,IAAA,EAAA;AACA,QAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,IAAA;;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,WAAA;AACA,OAJA;AAMA,WAAA,QAAA,GAAA,EAAA;AACA,KAVA;AAWA,IAAA,UAXA,wBAWA;AACA,WAAA,QAAA,GAAA,wBAAA;AACA,WAAA,UAAA,GAAA,CAAA,KAAA,EAAA,MAAA,EAAA,SAAA,CAAA;AACA,WAAA,OAAA,GAAA,KAAA;AACA,KAfA;AAgBA,IAAA,QAhBA,oBAgBA,GAhBA,EAgBA;AACA,WAAA,KAAA,GAAA,GAAA;AACA,WAAA,KAAA,GAAA,KAAA,KAAA,CAAA,OAAA,CAAA,KAAA,EAAA,EAAA,EAAA,WAAA,EAAA;AACA,UAAA,UAAA,GAAA;AACA,QAAA,OAAA,EAAA,KADA;AAEA,QAAA,WAAA,EAAA,kBAAA;AAFA,OAAA;AAIA,WAAA,QAAA,CAAA,IAAA,CAAA,UAAA,EAPA,CASA;;AAEA,WAAA,KAAA,CAAA,GAAA,CAAA,sCAAA,SAAA,GAAA,KAAA,KAAA,GAAA,SAAA,EAAA,IAAA,CACA,YAAA;AAEA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AAEA,OALA;AAOA;AAlCA,GAfA;AAmDA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,KAAA,QAAA;AACA;AAHA;AAnDA,CAAA","sourcesContent":["<template>\n  <div class=\"app_body container\">\n    <template v-for='(message, index) in getMessages'>\n      <messageDisplay v-bind:message='message' :fromBot='message.fromBot' :key=\"index\"></messageDisplay>\n    </template>\n    \n    <br>\n    <hr v-if=\"!initial && isVeg!=''\">\n    <h3>{{ question }}</h3>\n    <br>\n    \n    \n    <button class=\"btn\" v-if='initial' @click=\"initialize()\" >Start!</button>\n    \n    <template v-if=\"!initial && isVeg==''\" >\n      <template v-for='category in categories'>\n    <button class=\"btn\"   :key='category' @click=\"setIsVeg(category)\" >{{ category }}</button>\n    </template>\n    </template>\n\n    <template v-if=\"!initial && isVeg!=''\">\n      <template v-for='category in categories'>\n    <button class=\"btn\" :key='category' @click=\"getSomething(category)\" >{{ category }}</button>\n    </template>\n    </template>\n\n  </div>\n</template>\n\n<script>\nimport messageDisplay from './messageDisplay.vue';\n\nexport default {\n  name: 'Body',\n  components: {\n    'messageDisplay': messageDisplay\n  },\n  data: ()=>{\n    return {\n      messages: [],\n      q: [],\n      isVeg: '',\n      categories: ['Start!'],\n      initial: true,\n      question: \"Can't think what to eat, I can help?\",\n    }\n  },\n  methods: {\n    getSomething (index) {\n      console.log(index);\n      this.$http.get('https://reqres.in/api/products/3').then(\n        (data) => {\n          this.messages.push(data);\n          console.log(\"This runs\");\n        }\n      );\n      this.question=\"\"\n    },\n    initialize () {\n      this.question = \"What would you prefer?\";\n      this.categories = ['Veg', 'Both', 'Non veg'];\n      this.initial = false;\n    },\n    setIsVeg (inp) {\n      this.isVeg = inp;\n      this.isVeg = this.isVeg.replace(/\\s/g,'').toLowerCase();\n      var newMessage = {\n        fromBot: false,\n        messageText: \"You selected \"+inp\n      }\n      this.messages.push(newMessage);\n\n      // send request\n\n      this.$http.get('http://localhost:5000/recommender'+\"?isveg=\"+this.isVeg+'&query=').then(\n        () => {\n          \n          console.log(\"asd\");\n\n        }\n      );\n    }\n  },\n  computed: {\n    getMessages () {\n      return this.messages;\n    }\n  }\n}\n</script>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.app_body {\n    margin-top:10px;\n    min-height: 400px;\n    margin-bottom:70px;\n}\ndiv.app_body {\n  border: 20px #f43461 solid;\n}\n.btn {\n  background-color: #f43461;\n  color: white;\n  padding: 7px;\n  border-radius: 10px;\n  margin: 15px;\n  margin-top:7px;\n}\n.btn:focus, .btn:active:focus, .btn.active:focus{\n    outline:none;\n    box-shadow:none;\n}\nh3{\n  margin-bottom: 0px;\n  padding-bottom: 0;\n}\n\n</style>\n"],"sourceRoot":"src/components"}]}